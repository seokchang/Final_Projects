<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="camplist">
   
   <!-- 캠프 리스트 -->
  <select id="selectAllCampList" parameterType="map" resultType="camplist">
  	select * from (select rownum as rnum, c.* from (
	   	select 
		    camp.camp_no as campNo,
		    camp_name as campName,
		    camp_addr as campAddr,
		    camp_site as campSite,
		    camp_tel as campTel,
		    camp_theme as campTheme,
		    camp_fac as campFac,
		    camp_ctg as campCtg,
		    campenv.env_name as campEnv,
		    (select min(room_price) from camproom where camp_no = camp.camp_no) as campMinPrice,
		    (select avg(rev_star) from review where camp_no = camp.camp_no) as campStar
		from camp full join campenv on (camp.camp_no = campenv.camp_no)
	)c)
	where rnum between ${start} and ${end}
  </select>
   
   <!-- 캠핑장 수 -->
  <select id="totalCount" resultType="_int">
  		select count(*) from camp
  </select>
  
  <!-- 캠핑장 상세보기 -->
  <select id="selectOneCamp" parameterType="string" resultType="camplist">
  	select
  		camp_no as campNo,
  		ceo_id as ceoId,
  		camp_addr as campAddr,
  		camp_name as campName,
  		camp_site as campSite,
  		camp_tel as campTel,
  		camp_theme as campTheme,
  		camp_fac as campFac,
  		camp_ctg as campCtg
  	from camp where camp_no = #{campNo}
  </select>
  
  <!-- 검색 된 캠핑장 총 개수 -->
  <select id="totalSearchCampList" parameterType="HashMap" resultType="_int">
		select count(*)
		<choose>
			<when test="searchSelect.equals('campName')">
				from camp where camp_name like '%'||#{keyword}||'%'
			</when>
			<when test="searchSelect.equals('campAddr')">
				from camp where camp_addr like '%'||#{keyword}||'%'
			</when>
		</choose>
	</select>
  
  <!-- 캠핑장 검색 -->
  <select id="searchCampList" parameterType="map" resultType="camplist">
  	select * from (select rownum as rnum, c.* from (
		select 
	    camp.camp_no as campNo,
	    camp_name as campName,
	    camp_addr as campAddr,
	    camp_site as campSite,
	    camp_tel as campTel,
	    camp_theme as campTheme,
	    camp_fac as campFac,
	    camp_ctg as campCtg,
	    campenv.env_name as campEnv,
	    (select min(room_price) from camproom where camp_no = camp.camp_no) as campMinPrice,
	    (select avg(rev_star) from review where camp_no = camp.camp_no) as campStar
	from camp full join campenv on (camp.camp_no = campenv.camp_no) where 
		<choose>
			<when test="searchSelect.equals('campName')">
				camp_name like '%'||#{keyword}||'%'
			</when>
			<when test="searchSelect.equals('campAddr')">
				camp_addr like '%'||#{keyword}||'%'
			</when>
		</choose>
	)c)
	where rnum between ${start} and ${end}
  </select>  
  
  <!-- 메인 캠핑장 광고 리스트 --> 
  <select id="">
  	select
  </select>
  
  <!-- 메인 새로운 캠핑장 리스트 -->
  <select id="mainNewCampList" resultType="camplist">
  	select 
	    camp.camp_no as campNo,
	    camp_name as campName,
	    camp_addr as campAddr,
	    camp_site as campSite,
	    camp_tel as campTel,
	    camp_theme as campTheme,
	    camp_fac as campFac,
	    camp_ctg as campCtg,
	    campenv.env_name as campEnv,
	    (select min(room_price) from camproom where camp_no = camp.camp_no) as campMinPrice,
	    (select avg(rev_star) from review where camp_no = camp.camp_no) as campStar
	from camp full join campenv on (camp.camp_no = campenv.camp_no) order by camp.camp_no desc
  </select>
  
  <!-- 메인 캠핑장 예약 랭킹 -->
  <select id="mainCampRanking" resultType="camplist">
  	select 
	    camp.camp_no as campNo,
	    camp_addr as campAddr,
	    camp_name as campName,
	    camp_site as campSite,
	    camp_tel as campTel,
	    camp_theme as campTheme,
	    camp_fac as campFac,
	    campenv.env_name as campEnv,
	    (select min(room_price) from camproom where camp_no = camp.camp_no) as campMinPrice,
	    (select avg(rev_star) from review where camp_no = camp.camp_no) as campStar,
	    (select sum(res_count) from reservation where camp_no = camp.camp_no) as resCount
	from camp full join campenv 
	on (camp.camp_no = campenv.camp_no) order by resCount
  </select>
</mapper>
